{
  "name": "hook tester",
  "nodes": [
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1vBd5XHZ1-CMhj3qLvR7bs2lPyucvUsNKiPxCPwuQLdo",
          "mode": "list",
          "cachedResultName": "hook test",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1vBd5XHZ1-CMhj3qLvR7bs2lPyucvUsNKiPxCPwuQLdo/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1vBd5XHZ1-CMhj3qLvR7bs2lPyucvUsNKiPxCPwuQLdo/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "topic": "={{ $('On form submission').item.json.video_topic }}",
            "h1": "={{ $json.hook1 }}sa",
            "h2": "={{ $json.hook2 }}",
            "h3": "={{ $json.hook3 }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "sr",
              "displayName": "sr",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "topic",
              "displayName": "topic",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "h1",
              "displayName": "h1",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "h2",
              "displayName": "h2",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "h3",
              "displayName": "h3",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        860,
        0
      ],
      "id": "13fd07a2-7e12-4b59-8614-4607a57ad91d",
      "name": "Append row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "c2GUvsiG3FeRYrHE",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Write 3 catchy YouTube Shorts hooks for the topic: \"{{ $json[\"video_topic\"] }}\"\n\nRules:\n- Hooks must be under 15 words.\n- Mix of Hindi + English.\n- No clickbait, no emojis.\n- Return output strictly in this JSON format:\n{\n  \"hook1\": \"your first hook here\",\n  \"hook2\": \"your second hook here\",\n  \"hook3\": \"your third hook here\"\n}\n",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        340,
        0
      ],
      "id": "cd950bb5-1a88-4450-9974-9644f19f09fe",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "formTitle": "hook test",
        "formFields": {
          "values": [
            {
              "fieldLabel": "video_topic",
              "requiredField": true
            },
            {
              "fieldLabel": "existing_hook",
              "fieldType": "textarea"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.2,
      "position": [
        -180,
        180
      ],
      "id": "ec4b18a8-04ef-4355-9313-2454ba93ac45",
      "name": "On form submission",
      "webhookId": "1e7754f9-fffa-4c26-ac0b-5e48e53e450b"
    },
    {
      "parameters": {
        "jsCode": "const llmOutput = $json[\"output\"]; // or replace with actual key if different\n\nlet parsed;\ntry {\n  parsed = JSON.parse(llmOutput);\n} catch (err) {\n  throw new Error(\"Failed to parse LLM JSON output\");\n}\n\nreturn [\n  {\n    json: {\n      hook1: parsed.hook1 || \"\",\n      hook2: parsed.hook2 || \"\",\n      hook3: parsed.hook3 || \"\"\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        660,
        0
      ],
      "id": "f0892b07-9caf-4c9d-a475-f9c4f49ba3ad",
      "name": "Code"
    },
    {
      "parameters": {
        "model": "openai/gpt-3.5-turbo-0613",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        140,
        260
      ],
      "id": "9139a603-575f-4458-88a6-2a41a0cddff8",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "W0Xmy66GoDe1fpiS",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        340,
        180
      ],
      "id": "543a5d31-4a82-4a00-b01b-7e52f46cdbe5",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "YxZIvZv6PrzFvCua",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a YouTube content strategist.\nBased on the search data:\n\nTopic: {{ $('On form submission').item.json.video_topic }}\nor\nHook: {{ $json[\"selected_hook\"] }}\n\nDo the following:\n\nWrite a SEO-optimized YouTube video title (max 70 characters) that grabs attention and includes the main keyword.\n\nWrite a concise video description (under 250 characters) that supports the hook and improves click-through rate.\n\nSuggest 5 relevant and trending hashtags based on the topic.\n\nSuggest the best time to post the video, based on YouTube best practices and topic type.\n\nReturn your response as a clean JSON object:\n\njson\nCopy\nEdit\n{\n  \"title\": \"Your optimized title here\",\n  \"description\": \"Your 250-character video description here\",\n  \"hashtags\": [\"#hashtag1\", \"#hashtag2\", \"#hashtag3\", \"#hashtag4\", \"#hashtag5\"],\n  \"best_time\": \"Day and Time\"\n}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        320,
        440
      ],
      "id": "71d571bd-68b5-4c81-9e3b-1946ead4dd69",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "jsCode": "// Get the raw string from LLM output\nconst rawOutput = $json.output;\n\n// Step 1: Remove backticks and \"```json\" or \"```\"\nconst cleanedString = rawOutput\n  .replace(/```json\\s*/, '')\n  .replace(/```/, '')\n  .trim();\n\n// Step 2: Parse the string into a JSON object\nlet parsed;\ntry {\n  parsed = JSON.parse(cleanedString);\n} catch (err) {\n  throw new Error(\"Failed to parse JSON: \" + err.message);\n}\n\n// Step 3: Return the structured object\nreturn [\n  {\n    json: {\n      seo_title: parsed.title || \"\",\n      seo_description: parsed.description || \"\",\n      seo_hashtags: parsed.hashtags || [],\n      post_time: parsed.best_time || \"\",\n      // If there's a hook field, add it; otherwise skip\n      hook: parsed.hook || \"\"\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        680,
        440
      ],
      "id": "d68d8aac-6653-4948-af89-7222518a92ec",
      "name": "Code1"
    },
    {
      "parameters": {
        "content": "",
        "height": 320,
        "width": 1000
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        20,
        380
      ],
      "id": "3950ae65-5e31-4ee6-a682-8ebbced89b75",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "",
        "height": 320,
        "width": 800
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        120,
        -40
      ],
      "id": "0f086aad-354a-49d6-8bab-cc4818f6c5f0",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "url": "=https://suggestqueries.google.com/complete/search?client=firefox&q={{$json[\"video_topic\"]}}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        120,
        440
      ],
      "id": "e44c3a3b-9f20-400e-9bbb-620866d9c217",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "modelName": "models/gemini-1.5-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        340,
        600
      ],
      "id": "427a480c-20e2-435e-a895-1fa30fecca10",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "YxZIvZv6PrzFvCua",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1ZMfQ8JrOsmnsgSinYeAj0bFloWuQMtsrNph2lICpo6g",
          "mode": "list",
          "cachedResultName": "content optimization",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1ZMfQ8JrOsmnsgSinYeAj0bFloWuQMtsrNph2lICpo6g/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1ZMfQ8JrOsmnsgSinYeAj0bFloWuQMtsrNph2lICpo6g/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "title": "={{ $json.seo_title }}",
            "description": "={{ $json.seo_description }}",
            "hashtags": "={{ $json.seo_hashtags }}",
            "suggested date": "={{ $json.post_time }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "description",
              "displayName": "description",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "hashtags",
              "displayName": "hashtags",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "suggested date",
              "displayName": "suggested date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        840,
        440
      ],
      "id": "2dc716b4-e8ad-46b9-82eb-319114d05d5e",
      "name": "content optimization",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "c2GUvsiG3FeRYrHE",
          "name": "Google Sheets account"
        }
      }
    }
  ],
  "pinData": {
    "AI Agent": [
      {
        "json": {
          "output": "{\n  \"hook1\": \"Dopamine detox kya hai? Janiye abhi!\",\n  \"hook2\": \"Kya aap addicted hai? Dopamine detox se break lo!\",\n  \"hook3\": \"Dopamine detox karke naye swasth jeevan ki shuruat karein!\"\n}"
        }
      }
    ],
    "Code": [
      {
        "json": {
          "hook1": "Dopamine detox kya hai? Janiye abhi!",
          "hook2": "Kya aap addicted hai? Dopamine detox se break lo!",
          "hook3": "Dopamine detox karke naye swasth jeevan ki shuruat karein!"
        }
      }
    ],
    "On form submission": [
      {
        "json": {
          "video_topic": "dopamine detox",
          "existing_hook": "",
          "submittedAt": "2025-07-04T22:51:25.499-04:00",
          "formMode": "test"
        }
      }
    ]
  },
  "connections": {
    "AI Agent": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On form submission": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          },
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Append row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        []
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Append row in sheet": {
      "main": [
        []
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "content optimization",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "versionId": "12457301-312d-498e-bad6-90b1c7f6e5fd",
  "meta": {
    "templateId": "self-building-ai-agent",
    "templateCredsSetupCompleted": true,
    "instanceId": "11257a99a9c691d49a64a0311653cf03520d5fc6444579c431f612f640f6321e"
  },
  "id": "vCn0y4p7c1zL5maw",
  "tags": []
}